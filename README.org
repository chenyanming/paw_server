#+title: paw_server - PAW Python Command Line Interface

[[https://github.com/chenyanming/paw][PAW (Point-And-Write)]] Python Command Line Interface and Server Components.

This repository contains the Python CLI tool and server components that work with [[https://github.com/chenyanming/paw][paw.el]], providing advanced annotation and language learning tools for Emacs.

* Overview

~paw_server~ is the Python backend for the PAW (Point-And-Write) system, providing:

- Command line interface for dictionary searches and language processing
- HTTP server for Emacs integration
- Support for multiple languages (English, Japanese, Chinese)
- Database-driven annotation and vocabulary management
- Integration with external services like Wallabag

* Installation

** Python Dependencies

Install the PAW CLI tool:

#+begin_src sh
pip install emacs-paw
#+end_src

Additional NLTK data:

#+begin_src sh
python -m nltk.downloader stopwords
python -m nltk.downloader punkt
#+end_src

* Usage

** Available Commands

- ~run_server~: Start the PAW server for handling annotation requests (designed for Emacs integration)
- ~server~: Start the PAW server in standalone mode with enhanced features
- ~en_search~: Search in English dictionaries
- ~ja_search~: Search in Japanese dictionaries
- ~ja_segment~: Japanese text segmentation
- ~check_language~: Detect language of given text

** Server Operations

*** Start PAW Server (Emacs Integration Mode)

#+begin_src sh
paw run_server --database /home/user/org/paw.sqlite \
               --save-dir /tmp/source.html \
               --port 5001 \
               --wallabag-host https://example.com \
               --wallabag-username username \
               --wallabag-password password \
               --wallabag-clientid clientid \
               --wallabag-secret secret
#+end_src

*** Start PAW Server (Standalone Mode)

Using command line arguments:

#+begin_src sh
paw server --database /home/user/org/paw.sqlite \
           --save-dir /tmp/ \
           --port 5001 \
           --server-type production \
           --wallabag-host https://example.com \
           --wallabag-username username \
           --wallabag-password password \
           --wallabag-clientid clientid \
           --wallabag-secret secret
#+end_src

Using environment variables (recommended for production):

#+begin_src sh
export PAW_DATABASE_PATH="/home/user/org/paw.sqlite"
export PAW_SAVE_DIR="/tmp/"
export PAW_PORT="5001"
export PAW_SERVER_TYPE="production"
export WALLABAG_HOST="https://example.com"
export WALLABAG_USERNAME="your_username"
export WALLABAG_PASSWORD="your_password"
export WALLABAG_CLIENTID="your_client_id"
export WALLABAG_SECRET="your_client_secret"

paw server
#+end_src

** Dictionary Operations

*** English Dictionary Search

#+begin_src sh
paw en_search /home/user/org/stardict.db MATCH hello \
              --tag "" \
              --wordlists /home/user/org/5000.csv \
              --known-words-files /home/user/org/eudic.csv,/home/user/org/english.txt
#+end_src

*** Japanese Dictionary Search

#+begin_src sh
paw ja_search /home/user/org/japanese.db MATCH "海外の大企業は" \
              --tag "" \
              --wordlist /home/user/org/蓝宝书日语文法.csv \
              --known-words-files /home/user/org/japanese.txt
#+end_src

*** Japanese Text Segmentation

#+begin_src sh
paw ja_segment "実在の女性を骨抜きにしたオスたちの話だけを紹介しており"
#+end_src

Returns JSON with segmentation details including surface form, base form, and reading.

*** Language Detection

#+begin_src sh
paw check_language --languages "english,chinese,japanese" \
                   --text "これは日本語の文です"
#+end_src

* Production Deployment

** Environment Variables

| Variable | Description | Default |
|----------|-------------|---------|
| ~PAW_DATABASE_PATH~ | Path to SQLite database | None |
| ~PAW_SAVE_DIR~ | Directory to save files | ~/tmp~ |
| ~PAW_PORT~ | Server port | ~5001~ |
| ~PAW_SERVER_TYPE~ | Server type (flask/production) | ~flask~ |
| ~WALLABAG_HOST~ | Wallabag server URL | None |
| ~WALLABAG_USERNAME~ | Wallabag username | None |
| ~WALLABAG_PASSWORD~ | Wallabag password | None |
| ~WALLABAG_CLIENTID~ | Wallabag client ID | None |
| ~WALLABAG_SECRET~ | Wallabag client secret | None |

** Production Deployment with Waitress

#+begin_src sh
# Install waitress
pip install waitress

# Set environment variables
export PAW_DATABASE_PATH="/path/to/your/paw.sqlite"
export PAW_SAVE_DIR="/var/www/paw/uploads/"
export PAW_PORT="5001"
export PAW_SERVER_TYPE="production"

# Configure Wallabag (optional)
export WALLABAG_HOST="https://your-wallabag.com"
export WALLABAG_USERNAME="your_username"
export WALLABAG_PASSWORD="your_password"
export WALLABAG_CLIENTID="your_client_id"
export WALLABAG_SECRET="your_client_secret"

# Run the server
paw server
#+end_src

* Features

- **Enhanced Stability**: Improved error handling and automatic database reconnection
- **Environment Variable Support**: All configuration via environment variables
- **Production Server Support**: Better performance with waitress WSGI server
- **Graceful Shutdown**: Proper cleanup on server shutdown
- **Comprehensive Logging**: Logging to both console and file
- **Thread Safety**: Safe concurrent database access
- **Multi-language Support**: English, Japanese, and Chinese language processing
- **Dictionary Integration**: Support for various dictionary formats and sources

* Integration with PAW.el

This server component is designed to work seamlessly with [[https://github.com/chenyanming/paw][paw.el]], the Emacs annotation and language learning system. The server provides:

- Real-time dictionary lookups
- Language processing services
- Annotation storage and retrieval
- Wallabag integration for web content management

* Development

** Project Structure

#+begin_src
paw_server/
├── paw/
│   ├── __init__.py
│   ├── cli.py              # Command line interface
│   ├── paw_server.py       # HTTP server implementation
│   ├── paw_ecdict.py       # English-Chinese dictionary support
│   ├── paw_jlpt.py         # Japanese language processing (JLPT)
│   └── paw_mecab.py        # MeCab integration for Japanese
├── pyproject.toml          # Project configuration
├── README_PAW_CLI.md       # Detailed CLI documentation
└── README.org              # This file
#+end_src

** Dependencies

- Python 3.10+
- Flask & Flask-CORS for web server
- Waitress for production WSGI server
- NLTK for natural language processing
- MeCab and related Japanese processing libraries
- Requests for HTTP client functionality
- Lingua for language detection

* License

This project is licensed under the GNU General Public License v3.0.

* Author

Damon Chan

* Related Projects

- [[https://github.com/chenyanming/paw][PAW.el]] - The main Emacs package for annotation and language learning
- [[https://github.com/chenyanming/paw_org_protocol][PAW Org Protocol]] - Browser integration for PAW